

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Mar 23 12:58:47 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F628A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0015                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001F                     	;# 
    73  0081                     	;# 
    74  0085                     	;# 
    75  0086                     	;# 
    76  008C                     	;# 
    77  008E                     	;# 
    78  0092                     	;# 
    79  0098                     	;# 
    80  0099                     	;# 
    81  009A                     	;# 
    82  009B                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009F                     	;# 
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  008C                     	;# 
   114  008E                     	;# 
   115  0092                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009F                     	;# 
   123  0001                     _TMR0	set	1
   124  000B                     _INTCON	set	11
   125  0012                     _T2CON	set	18
   126  0017                     _CCP1CON	set	23
   127  0015                     _CCPR1L	set	21
   128  005F                     _GIE	set	95
   129  0092                     _TMR2ON	set	146
   130  0091                     _T2CKPS1	set	145
   131  0090                     _T2CKPS0	set	144
   132  00BD                     _CCP1X	set	189
   133  005D                     _T0IE	set	93
   134  005A                     _T0IF	set	90
   135  0092                     _PR2	set	146
   136  0085                     _TRISA	set	133
   137  0086                     _TRISB	set	134
   138  0408                     _PS0	set	1032
   139  0409                     _PS1	set	1033
   140  040A                     _PS2	set	1034
   141  040B                     _PSA	set	1035
   142  040D                     _T0CS	set	1037
   143  0473                     _OSCF	set	1139
   144                           
   145                           	psect	cinit
   146  000B                     start_initialization:	
   147                           ; #config settings
   148                           
   149  000B                     __initialization:
   150                           
   151                           ; Clear objects allocated to COMMON
   152  000B  01F3               	clrf	__pbssCOMMON& (0+127)
   153  000C  01F4               	clrf	(__pbssCOMMON+1)& (0+127)
   154  000D                     end_of_initialization:	
   155                           ;End of C runtime variable initialization code
   156                           
   157  000D                     __end_of__initialization:
   158  000D  0183               	clrf	3
   159  000E  2840               	ljmp	_main	;jump to C main() function
   160                           
   161                           	psect	bssCOMMON
   162  0073                     __pbssCOMMON:
   163  0073                     _dir:
   164  0073                     	ds	2
   165                           
   166                           	psect	cstackCOMMON
   167  0070                     __pcstackCOMMON:
   168  0070                     ?_interruptRoutine:
   169  0070                     ??_interruptRoutine:	
   170                           ; 1 bytes @ 0x0
   171                           
   172  0070                     ?_main:	
   173                           ; 1 bytes @ 0x0
   174                           
   175                           
   176                           ; 1 bytes @ 0x0
   177  0070                     	ds	3
   178  0073                     ??_main:
   179                           
   180                           	psect	maintext
   181  0040                     __pmaintext:	
   182                           ; 1 bytes @ 0x3
   183 ;;
   184 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   185 ;;
   186 ;; *************** function _main *****************
   187 ;; Defined at:
   188 ;;		line 68 in file "main.c"
   189 ;; Parameters:    Size  Location     Type
   190 ;;		None
   191 ;; Auto vars:     Size  Location     Type
   192 ;;		None
   193 ;; Return value:  Size  Location     Type
   194 ;;                  1    wreg      void 
   195 ;; Registers used:
   196 ;;		wreg, status,2
   197 ;; Tracked objects:
   198 ;;		On entry : B00/0
   199 ;;		On exit  : 0/0
   200 ;;		Unchanged: 0/0
   201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   202 ;;      Params:         0       0       0       0
   203 ;;      Locals:         0       0       0       0
   204 ;;      Temps:          0       0       0       0
   205 ;;      Totals:         0       0       0       0
   206 ;;Total ram usage:        0 bytes
   207 ;; Hardware stack levels required when called: 1
   208 ;; This function calls:
   209 ;;		Nothing
   210 ;; This function is called by:
   211 ;;		Startup code after reset
   212 ;; This function uses a non-reentrant model
   213 ;;
   214                           
   215                           
   216                           ;psect for function _main
   217  0040                     _main:
   218  0040                     l670:	
   219                           ;incstack = 0
   220                           ; Regs used in _main: [wreg+status,2]
   221                           
   222                           
   223                           ;main.c: 70:  dir=0;
   224  0040  01F3               	clrf	_dir
   225  0041  01F4               	clrf	_dir+1
   226  0042                     l672:
   227                           
   228                           ;main.c: 75:     OSCF = 1;
   229  0042  1683               	bsf	3,5	;RP0=1, select bank1
   230  0043  1303               	bcf	3,6	;RP1=0, select bank1
   231  0044  158E               	bsf	14,3	;volatile
   232  0045                     l674:
   233                           
   234                           ;main.c: 76:  TRISB = 0xf7;
   235  0045  30F7               	movlw	247
   236  0046  0086               	movwf	6	;volatile
   237  0047                     l676:
   238                           
   239                           ;main.c: 77:     TRISA = 0xff;
   240  0047  30FF               	movlw	255
   241  0048  0085               	movwf	5	;volatile
   242  0049                     l678:
   243                           
   244                           ;main.c: 79:  PR2=0xff;
   245  0049  30FF               	movlw	255
   246  004A  0092               	movwf	18	;volatile
   247  004B                     l680:
   248                           
   249                           ;main.c: 80:  CCPR1L=0x80;
   250  004B  3080               	movlw	128
   251  004C  1283               	bcf	3,5	;RP0=0, select bank0
   252  004D  1303               	bcf	3,6	;RP1=0, select bank0
   253  004E  0095               	movwf	21	;volatile
   254  004F                     l682:
   255                           
   256                           ;main.c: 81:  CCP1CON=0x04|0x08;
   257  004F  300C               	movlw	12
   258  0050  0097               	movwf	23	;volatile
   259  0051                     l684:
   260                           
   261                           ;main.c: 82:  CCP1X=1;
   262  0051  1697               	bsf	23,5	;volatile
   263  0052                     l686:
   264                           
   265                           ;main.c: 89:  T2CON=0x00;
   266  0052  0192               	clrf	18	;volatile
   267  0053                     l688:
   268                           
   269                           ;main.c: 90:  T2CKPS0=1;
   270  0053  1412               	bsf	18,0	;volatile
   271  0054                     l690:
   272                           
   273                           ;main.c: 91:  T2CKPS1=1;
   274  0054  1492               	bsf	18,1	;volatile
   275  0055                     l692:
   276                           
   277                           ;main.c: 92:  TMR2ON=1;
   278  0055  1512               	bsf	18,2	;volatile
   279  0056                     l694:
   280                           
   281                           ;main.c: 96:  T0CS=0;
   282  0056  1683               	bsf	3,5	;RP0=1, select bank1
   283  0057  1303               	bcf	3,6	;RP1=0, select bank1
   284  0058  1281               	bcf	1,5	;volatile
   285  0059                     l696:
   286                           
   287                           ;main.c: 97:  PSA=0;
   288  0059  1181               	bcf	1,3	;volatile
   289  005A                     l698:
   290                           
   291                           ;main.c: 98:  PS2=0; PS1=1; PS0=0;
   292  005A  1101               	bcf	1,2	;volatile
   293  005B                     l700:
   294  005B  1481               	bsf	1,1	;volatile
   295  005C                     l702:
   296  005C  1001               	bcf	1,0	;volatile
   297  005D                     l704:
   298                           
   299                           ;main.c: 99:  INTCON=0;
   300  005D  018B               	clrf	11	;volatile
   301  005E                     l706:
   302                           
   303                           ;main.c: 100:  GIE=1;
   304  005E  178B               	bsf	11,7	;volatile
   305  005F                     l708:
   306                           
   307                           ;main.c: 101:  T0IE=1;
   308  005F  168B               	bsf	11,5	;volatile
   309  0060                     l710:
   310                           
   311                           ;main.c: 102:  TMR0=0;
   312  0060  1283               	bcf	3,5	;RP0=0, select bank0
   313  0061  1303               	bcf	3,6	;RP1=0, select bank0
   314  0062  0181               	clrf	1	;volatile
   315  0063                     l59:	
   316                           ;main.c: 104:  while(1);
   317                           
   318  0063                     l60:
   319  0063  2863               	goto	l59
   320  0064  280A               	ljmp	start
   321  0065                     __end_of_main:
   322                           
   323                           	psect	text1
   324  000F                     __ptext1:	
   325 ;; *************** function _interruptRoutine *****************
   326 ;; Defined at:
   327 ;;		line 48 in file "main.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, status,2, status,0
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   341 ;;      Params:         0       0       0       0
   342 ;;      Locals:         0       0       0       0
   343 ;;      Temps:          3       0       0       0
   344 ;;      Totals:         3       0       0       0
   345 ;;Total ram usage:        3 bytes
   346 ;; Hardware stack levels used: 1
   347 ;; This function calls:
   348 ;;		Nothing
   349 ;; This function is called by:
   350 ;;		Interrupt level 1
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           
   355                           ;psect for function _interruptRoutine
   356  000F                     _interruptRoutine:
   357  000F                     i1l654:
   358                           
   359                           ;main.c: 49:  if(T0IF&&T0IE)
   360  000F  1D0B               	btfss	11,2	;volatile
   361  0010  2812               	goto	u1_21
   362  0011  2813               	goto	u1_20
   363  0012                     u1_21:
   364  0012  2839               	goto	i1l54
   365  0013                     u1_20:
   366  0013                     i1l656:
   367  0013  1E8B               	btfss	11,5	;volatile
   368  0014  2816               	goto	u2_21
   369  0015  2817               	goto	u2_20
   370  0016                     u2_21:
   371  0016  2839               	goto	i1l54
   372  0017                     u2_20:
   373  0017                     i1l658:
   374                           
   375                           ;main.c: 50:  {;main.c: 51:   T0IF=0;
   376  0017  110B               	bcf	11,2	;volatile
   377  0018                     i1l660:
   378                           
   379                           ;main.c: 53:   if(dir)
   380  0018  0873               	movf	_dir,w
   381  0019  0474               	iorwf	_dir+1,w
   382  001A  1903               	btfsc	3,2
   383  001B  281D               	goto	u3_21
   384  001C  281E               	goto	u3_20
   385  001D                     u3_21:
   386  001D  282C               	goto	i1l666
   387  001E                     u3_20:
   388  001E                     i1l662:
   389                           
   390                           ;main.c: 54:   {;main.c: 55:    CCPR1L++;
   391  001E  3001               	movlw	1
   392  001F  00F0               	movwf	??_interruptRoutine
   393  0020  0870               	movf	??_interruptRoutine,w
   394  0021  1283               	bcf	3,5	;RP0=0, select bank0
   395  0022  1303               	bcf	3,6	;RP1=0, select bank0
   396  0023  0795               	addwf	21,f	;volatile
   397                           
   398                           ;main.c: 56:    if(CCPR1L == 0xff)
   399  0024  0A15               	incf	21,w	;volatile
   400  0025  1D03               	btfss	3,2
   401  0026  2828               	goto	u4_21
   402  0027  2829               	goto	u4_20
   403  0028                     u4_21:
   404  0028  2839               	goto	i1l54
   405  0029                     u4_20:
   406  0029                     i1l664:
   407                           
   408                           ;main.c: 57:     dir=0;
   409  0029  01F3               	clrf	_dir
   410  002A  01F4               	clrf	_dir+1
   411  002B  2839               	goto	i1l54
   412  002C                     i1l666:
   413                           
   414                           ;main.c: 60:   {;main.c: 61:    CCPR1L--;
   415  002C  3001               	movlw	1
   416  002D  1283               	bcf	3,5	;RP0=0, select bank0
   417  002E  1303               	bcf	3,6	;RP1=0, select bank0
   418  002F  0295               	subwf	21,f	;volatile
   419                           
   420                           ;main.c: 62:    if(CCPR1L == 0x00)
   421  0030  0815               	movf	21,w	;volatile
   422  0031  1D03               	btfss	3,2
   423  0032  2834               	goto	u5_21
   424  0033  2835               	goto	u5_20
   425  0034                     u5_21:
   426  0034  2839               	goto	i1l54
   427  0035                     u5_20:
   428  0035                     i1l668:
   429                           
   430                           ;main.c: 63:     dir=1;
   431  0035  3001               	movlw	1
   432  0036  00F3               	movwf	_dir
   433  0037  3000               	movlw	0
   434  0038  00F4               	movwf	_dir+1
   435  0039                     i1l54:
   436  0039  0872               	movf	??_interruptRoutine+2,w
   437  003A  008A               	movwf	10
   438  003B  0E71               	swapf	??_interruptRoutine+1,w
   439  003C  0083               	movwf	3
   440  003D  0EFE               	swapf	btemp,f
   441  003E  0E7E               	swapf	btemp,w
   442  003F  0009               	retfie
   443  0040                     __end_of_interruptRoutine:
   444  007E                     btemp	set	126	;btemp
   445  007E                     wtemp0	set	126
   446                           
   447                           	psect	intentry
   448  0004                     __pintentry:	
   449                           ;incstack = 0
   450                           ; Regs used in _interruptRoutine: [wreg+status,2+status,0]
   451                           
   452  0004                     interrupt_function:
   453  007E                     saved_w	set	btemp
   454  0004  00FE               	movwf	btemp
   455  0005  0E03               	swapf	3,w
   456  0006  00F1               	movwf	??_interruptRoutine+1
   457  0007  080A               	movf	10,w
   458  0008  00F2               	movwf	??_interruptRoutine+2
   459  0009  280F               	ljmp	_interruptRoutine
   460                           
   461                           	psect	idloc
   462                           
   463                           ;Config register IDLOC0 @ 0x2000
   464                           ;	unspecified, using default values
   465  2000                     	org	8192
   466  2000  3FFF               	dw	16383
   467                           
   468                           ;Config register IDLOC1 @ 0x2001
   469                           ;	unspecified, using default values
   470  2001                     	org	8193
   471  2001  3FFF               	dw	16383
   472                           
   473                           ;Config register IDLOC2 @ 0x2002
   474                           ;	unspecified, using default values
   475  2002                     	org	8194
   476  2002  3FFF               	dw	16383
   477                           
   478                           ;Config register IDLOC3 @ 0x2003
   479                           ;	unspecified, using default values
   480  2003                     	org	8195
   481  2003  3FFF               	dw	16383
   482                           
   483                           	psect	config
   484                           
   485                           ;Config register CONFIG @ 0x2007
   486                           ;	Oscillator Selection bits
   487                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
   488                           ;	Watchdog Timer Enable bit
   489                           ;	WDTE = OFF, WDT disabled
   490                           ;	Power-up Timer Enable bit
   491                           ;	PWRTE = OFF, PWRT disabled
   492                           ;	RA5/MCLR/VPP Pin Function Select bit
   493                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   494                           ;	Brown-out Detect Enable bit
   495                           ;	BOREN = ON, BOD enabled
   496                           ;	Low-Voltage Programming Enable bit
   497                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   498                           ;	Data EE Memory Code Protection bit
   499                           ;	CPD = OFF, Data memory code protection off
   500                           ;	Flash Program Memory Code Protection bit
   501                           ;	CP = OFF, Code prote   502  2007                     	org	8199
   503  2007  3F78               	dw	16248

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interruptRoutine in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruptRoutine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptRoutine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptRoutine in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _interruptRoutine                                     3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _interruptRoutine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       5       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       5      10        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Mar 23 12:58:47 2022

                       l60 0063                         l59 0063                        l700 005B  
                      l710 0060                        l702 005C                        l704 005D  
                      l706 005E                        l708 005F                        l670 0040  
                      l680 004B                        l672 0042                        l690 0054  
                      l682 004F                        l674 0045                        l692 0055  
                      l684 0051                        l676 0047                        l694 0056  
                      l686 0052                        l678 0049                        l696 0059  
                      l688 0053                        l698 005A                        _GIE 005F  
                      _PS0 0408                        _PR2 0092                        _PS1 0409  
                      _PS2 040A                        _PSA 040B                        _dir 0073  
                     _T0IE 005D                       _T0IF 005A                       _T0CS 040D  
                     i1l54 0039                       _OSCF 0473                       _TMR0 0001  
                     u1_20 0013                       u1_21 0012                       u2_20 0017  
                     u2_21 0016                       u3_20 001E                       u3_21 001D  
                     u4_20 0029                       u4_21 0028                       u5_20 0035  
                     u5_21 0034                       _main 0040                       btemp 007E  
                     start 000A   __end_of_interruptRoutine 0040                      ?_main 0070  
                    _CCP1X 00BD                      _T2CON 0012                      i1l660 0018  
                    i1l662 001E                      i1l654 000F                      i1l664 0029  
                    i1l656 0013                      i1l666 002C                      i1l658 0017  
                    i1l668 0035                      _TRISA 0085                      _TRISB 0086  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 000B               __end_of_main 0065                     ??_main 0073  
                   _CCPR1L 0015                     _INTCON 000B                     _TMR2ON 0092  
                   saved_w 007E    __end_of__initialization 000D             __pcstackCOMMON 0070  
               __pmaintext 0040                 __pintentry 0004                    _CCP1CON 0017  
        ?_interruptRoutine 0070         ??_interruptRoutine 0070                    _T2CKPS0 0090  
                  _T2CKPS1 0091                    __ptext1 000F       end_of_initialization 000D  
      start_initialization 000B                __pbssCOMMON 0073                  ___latbits 0000  
__size_of_interruptRoutine 0031          interrupt_function 0004           _interruptRoutine 000F  
            __size_of_main 0025                   intlevel1 0000  
